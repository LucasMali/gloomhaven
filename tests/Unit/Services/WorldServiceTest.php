<?php


namespace Tests\Unit\Services;


use App\Contracts\World\WorldServiceInterface;
use App\Party;
use App\World;
use Tests\TestCase;

class WorldServiceTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testPassesToLoadWorlds()
    {
        $maxPage = 5;
        $worldFactory = factory(World::class, 10)->make();
        $partyFactory = factory(Party::class)->make();
        $worldService = app(WorldServiceInterface::class);
        \Mockery::mock(World::class)->shouldReceive('where')->once()->with($partyFactory)->andReturn($worldFactory);
        $actual = $worldService->loadWorlds(1,$maxPage);

        self::assertEquals($actual->total(), $maxPage);
        self::assertEquals($actual->currentPage(), 1);

        self::assertInstanceOf(World::class, ($actual->items())[0]);
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
